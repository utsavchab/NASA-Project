name: PR Comment Check

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  check-comments:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up jq
        run: sudo apt-get install -y jq

      - name: Check for unresolved review comments
        id: comment-check
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          COMMENTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews")

          UNRESOLVED_COMMENTS=$(echo "$COMMENTS" | jq '[.[] | select(.state == "OPEN")] | length')

          echo "Number of unresolved comments: $UNRESOLVED_COMMENTS"

          if [ "$UNRESOLVED_COMMENTS" -gt 0 ]; then
            echo "status=failure" >> $GITHUB_ENV
            echo "There are unresolved comments."
          else
            echo "status=success" >> $GITHUB_ENV
            echo "All comments are resolved."
          fi

      - name: Set PR status
        run: |
          if [ "${{ env.status }}" == "failure" ]; then
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d '{"state": "failure", "description": "There are unresolved comments.", "context": "PR Comment Check"}' \
              "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}"
          else
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d '{"state": "success", "description": "All comments are resolved.", "context": "PR Comment Check"}' \
              "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}"
